{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/context/auth-context.js","shared/components/UIElements/Card.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","AuthContext","createContext","isLogeedIn","userId","token","login","logout","Card","style","children","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","onSubmit","event","preventDefault","contentClass","footerClass","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","logoutTimer","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","UserList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","users","fetchUsers","MainHeader","NavLinks","auth","useContext","isLoggedIn","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","NewPlace","React","lazy","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","isChecking","setIsChecking","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","console","log","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.6b7920e7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLogeedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      let responseData, response;\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.header}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal_footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState();\r\n  const [userId, setUserId] = useState();\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [isChecking, setIsChecking] = useState(true);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n    setIsChecking(false);\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId, isChecking };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport \"./UsersList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nconst UserList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => {\r\n        return (\r\n          <UserItem\r\n            key={user.id}\r\n            id={user.id}\r\n            image={user.image}\r\n            name={user.name}\r\n            placeCount={user.places.length}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\r\n        setLoadedUsers(response.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">NEW PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n          <nav className=\"main-navigation__drawer-nav\">\n            <NavLinks />\n          </nav>\n        </SideDrawer>\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Users from \"./user/pages/Users\";\n//import NewPlace from \"./places/pages/NewPlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n//import UserPlaces from \"./places/pages/UserPlaces\";\n//import UpdatePlace from \"./places/pages/UpdatePlace\";\n//import Auth from \"./user/pages/Auth\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId, isChecking } = useAuth();\n\n  let routes;\n\n  if (isChecking) {\n    console.log(process.env.REACT_APP_BACKEND_URL);\n    return <div>Checking eventual valid token</div>;\n  }\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}