{"version":3,"sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Map","props","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","Vector","features","Feature","geometry","geom","Circle","proj","fromLonLat","lng","lat","view","View","ref","className","style","PlaceItem","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","clearError","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","creatorId","userId","to","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","response","places","fetchPlaces","deletedPlaceId","prevPlaces","filter","p"],"mappings":"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","file":"static/js/6.8e35c2ac.chunk.js","sourcesContent":["//Google services implementation\r\n\r\n// import React, { useRef, useEffect } from \"react\";\r\n\r\n// const Map = (props) => {\r\n//   const mapRef = useRef();\r\n\r\n//   const { center, zoom } = props;\r\n\r\n//   useEffect(() => {\r\n//     const map = new window.google.maps.Map(mapRef.current, {\r\n//       center: center,\r\n//       zoom: zoom,\r\n//     });\r\n\r\n//     new window.google.maps.marker({ position: center, map: map });\r\n//   }, [center, zoom]);\r\n\r\n//   return (\r\n//     <div\r\n//       ref={mapRef}\r\n//       className={`map ${props.className}`}\r\n//       style={props.style}\r\n//     ></div>\r\n//   );\r\n// };\r\n\r\n// export default Map;\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM(),\r\n        }),\r\n        new window.ol.layer.Vector({\r\n          source: new window.ol.source.Vector({\r\n            features: [\r\n              new window.ol.Feature({\r\n                geometry: new window.ol.geom.Circle(\r\n                  window.ol.proj.fromLonLat([center.lng, center.lat]),50\r\n                ),\r\n              }),\r\n            ],\r\n          }),\r\n        }),\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: zoom,\r\n      }),\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${auth.token}` }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description} </p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {props.creatorId === auth.userId && (\r\n              <React.Fragment>\r\n                <Button to={`/places/${props.id}`}>EDIT</Button>\r\n                <Button danger onClick={showDeleteWarningHandler}>\r\n                  DELETE\r\n                </Button>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found.Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const response = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(response.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((p) => p.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}